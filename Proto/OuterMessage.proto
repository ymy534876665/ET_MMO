 syntax = "proto3";
package ET;

//ResponseType M2C_TestResponse
message C2M_TestRequest // IActorLocationRequest
{
	int32 RpcId = 90;
	string request = 1;
}

message M2C_TestResponse // IActorLocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	string response = 1;
}

//ResponseType Actor_TransferResponse
message Actor_TransferRequest // IActorLocationRequest
{
	int32 RpcId = 90;
	int32 MapIndex = 1;
}

message Actor_TransferResponse // IActorLocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType G2C_EnterMap
message C2G_EnterMap // IRequest
{
	int32 RpcId = 1;
}

message G2C_EnterMap // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	// 自己unitId
	int64 MyId = 4;
}

message MoveInfo
{
	repeated float X = 1;
	repeated float Y = 2;
	repeated float Z = 3;

	float A = 4;
	float B = 5;
	float C = 6;
	float W = 7;
	int32 TurnSpeed = 8;
}

message UnitInfo
{
	int64 UnitId = 1;
	int32 ConfigId = 2;
	int32 Type = 3;
	float X = 4;
	float Y = 5;
	float Z = 6;
	float ForwardX = 7;
	float ForwardY = 8;
	float ForwardZ = 9;
	repeated int32 Ks = 10;
	repeated int64 Vs = 11;
	MoveInfo MoveInfo = 12;
}

message M2C_CreateUnits // IActorMessage
{
	repeated UnitInfo Units = 2;
}

message M2C_CreateMyUnit // IActorMessage
{
	UnitInfo Unit = 1;
}

message M2C_StartSceneChange // IActorMessage
{
	int64 SceneInstanceId = 1;
	string SceneName = 2;	
}

message M2C_RemoveUnits // IActorMessage
{
	repeated int64 Units = 2;
}

message C2M_PathfindingResult // IActorLocationMessage
{
	int32 RpcId = 90;

	float X = 1;
	float Y = 2;
	float Z = 3;
}

message C2M_Stop // IActorLocationMessage
{
	int32 RpcId = 90;
}

message M2C_PathfindingResult // IActorMessage
{
	int64 Id = 1;

	float X = 2;
	float Y = 3;
	float Z = 4;

	repeated float Xs = 5;
	repeated float Ys = 6;
	repeated float Zs = 7;
}

message M2C_Stop // IActorMessage
{
	int32 Error = 1;

	int64 Id = 2;
	float X = 3;
	float Y = 4;
	float Z = 5;

	float A = 6;
	float B = 7;
	float C = 8;
	float W = 9;
}

//ResponseType G2C_Ping
message C2G_Ping // IRequest
{
	int32 RpcId = 90;
}

message G2C_Ping // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	int64 Time = 1;
}


message G2C_Test // IMessage
{
}

//ResponseType M2C_Reload
message C2M_Reload // IRequest
{
	int32 RpcId = 90;
	string Account = 1;
	string Password = 2;
}

message M2C_Reload // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType R2C_Login
message C2R_Login // IRequest
{
	int32 RpcId = 90;
	string  Account = 1;  // 帐号
	string  Password = 2;  // 密码
}

message R2C_Login // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	string Address = 1;
	int64 Key = 2;
	int64 GateId = 3;
}

//ResponseType G2C_LoginGate
message C2G_LoginGate // IRequest
{
	int32 RpcId = 90;
	int64 Key = 1;  // 帐号
	int64 GateId = 2;
}

message G2C_LoginGate // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int64 PlayerId = 1;
}

message G2C_TestHotfixMessage // IMessage
{
	string Info = 1;
}

//ResponseType M2C_TestRobotCase
message C2M_TestRobotCase // IActorLocationRequest
{
	int32 RpcId = 90;
	int32 N = 1;
}

message M2C_TestRobotCase // IActorLocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int32 N = 1;
}

//ResponseType M2C_TransferMap
message C2M_TransferMap // IActorLocationRequest
{
	int32 RpcId = 1;
}

message M2C_TransferMap // IActorLocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType R2C_AccountLogin
message C2R_AccountLogin // IRequest
{
	int32 RpcId = 90;

	string Account = 1;
	string Password = 2;
	int32 LoginWay = 3;
}
 

message R2C_AccountLogin // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message ServerListInfo 
{
	int32 Zone = 1;
	string Name = 2;
	int32 Status = 3;

}


//ResponseType R2C_GetServerList
message C2R_GetServerList // IRequest
{
	int32 RpcId = 90;
}

message R2C_GetServerList // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	repeated ServerListInfo serverListInfos = 1;
}



//ResponseType R2C_LoginZone
message C2R_LoginZone // IRequest
{
	int32 RpcId = 90;

	int32 zone = 1;

}


message R2C_LoginZone // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	string GateAddress = 1;
	int64 GateKey = 2;
}

message LoginGateInfo
{
	string Account = 1;
	int32 LogicZone = 2;
}

//ResponseType G2R_GatGateKey
message R2G_GatGateKey // IActorRequest
{
	int32 RpcId = 90;

	LoginGateInfo info = 1;
}

message G2R_GatGateKey // IActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;


	int64 GateKey = 1;
}

//ResponseType G2C_Login2Gate
message C2G_Login2Gate // IRequest
{
	int32 RpcId = 90;
	int64 GateKey = 2;
}

message G2C_Login2Gate // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message A2C_Disconnect //IMessage
{
	int32 Error = 1;
}

message GateRoleInfo
{
	int64 UnitId = 1;
	string Name = 2;
	int32 Level = 3;
}

//ResponseType G2C_GetRoles
message C2G_GetRoles // IRequest
{
	int32 RpcId = 90;
}

message G2C_GetRoles // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	repeated GateRoleInfo Roles = 1;
}


//ResponseType G2C_CreateRole
message C2G_CreateRole // IRequest
{
	int32 RpcId = 90;
	string Name = 1;
}


message G2C_CreateRole // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	GateRoleInfo Role = 1;
}

//ResponseType G2C_DeleteRole
message C2G_DeleteRole // IRequest
{
	int32 RpcId = 90;

	int64 RoleId = 1;
}

message G2C_DeleteRole // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	int64 RoleId = 1;
}

//ResponseType G2C_Enter2Map
message C2G_Enter2Map // IRequest
{
	int32 RpcId = 90;

	int64 UnitId = 1;
}

message G2C_Enter2Map // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	bool InQueue = 1; //是否需要排队
	int32 Count = 2; //排队总人数
	int32 index = 3; //排队位置

	
}

